{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 #Update / add Movies:\
Movie properties such as titles, descriptions, trailer urls, are stored in dictionaries in the entertainment_center.py file. To add or update movies in the dictionary:\
- First open up the entertainment_center.py file.\
- Create a new line in each dictionary for a new movie.\
- The key in the dictionary should always be the name of the movie. \
- The value in each dictionary will be that of the dictionary name. For example, if you wanted to add a new move called \'93Awesome Cat\'94 to the \'93description\'94 dictionary it would look something like:  \'93Awesome Cat\'94: \'93The Description for this awesome movie\'94.\
\
#Run the program:\
Once all of your movies are added. Save entertainment_center.py. Then run the program by:\
- Selecting \'93Run\'94 from the menu.\
- Then select \'93Run Module\'94.\
\
\
#File Specific information\
\'91\'92\'92entertainment_centery.py\'92\'92\'92\
This file contains six dictionaries:\
- Titles : movie titles\
- Description : movie descriptions\
- Poster : link to an image of the movie poster\
- YouTube URL : link to a youtube video of the trailer\
- Release Date: the release dates of the movies\
- Rating: the rating of the movie\
\
The dictionary titles\{\} is used in a for loop to dynamically create instances of the Class Movie() from each movies title. The other dictionaries are used to add properties to the movie instance. Each instance contains the following properties: \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 - Movie title\
- Movie description\
- Movie poster\
- Movie YouTube trailer URL\
- Movie release date\
- Movie rating\
\
Once an instance is created for each movie, the movie instances are added to an array and sent to fresh_tomatoes.py file to the open_movies_page function.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \'91\'92\'92media.py\'92\'92\'92\
This file holds the Class Movie().\
This class sets movie properties in the __init__ function for each instance. Those properties are:\
- self.title\
- self.storyline\
- self.poster_img_url\
- self.trailer_yt_url\
- self.release_date\
- self.rating\
\
This file has final array which holds the possible ratings that can be assigned per movie.\
\
This file also contains a function that will open up a webpage to play the YouTube trailer for each movie.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \'91\'92\'92fresh_tomatoes.py\'92\'92\'92\
This file generates an HTML page, assigns styles and animates in the movies specified in enterainment_center.py dictionaries. It reads the content from entertainment_center.py and adds the properties to the correct HTML elements.\
}